    /*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Telas;
import Model.Curso;
import DAO.CursoDAO;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Gustavo Girardon
 */
public class CadastroCurso extends javax.swing.JFrame {

    /**
     * Creates new form CadastroCurso
     */
    public CadastroCurso() {
        initComponents();
        this.setLocationRelativeTo(null);
        atualizarTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        txtCurso = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        cmbPeriodo = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        cmbDuracao = new javax.swing.JComboBox<>();
        btnSalvar = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblCurso = new javax.swing.JTable();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnSalvar1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Cadastro de Cursos");

        jLabel1.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        jLabel1.setText("Curso");

        txtCurso.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N

        jLabel2.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        jLabel2.setText("Período");

        cmbPeriodo.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        cmbPeriodo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Manhã", "Tarde", "Noite", "Integral" }));
        cmbPeriodo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbPeriodoActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        jLabel3.setText("Duração");

        cmbDuracao.setFont(new java.awt.Font("Segoe UI Emoji", 0, 18)); // NOI18N
        cmbDuracao.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "1 Semestre", "2 Semestres", "3 Semestres", "4 Semestres", "5 Semestres", "6 Semestres", "7 Semestres", "8 Semestres", "9 Semestres" }));
        cmbDuracao.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbDuracaoActionPerformed(evt);
            }
        });

        btnSalvar.setText("Salvar");
        btnSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvarActionPerformed(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));

        tblCurso.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Nome", "Periodo", "Duração"
            }
        ));
        tblCurso.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblCursoMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblCurso);
        if (tblCurso.getColumnModel().getColumnCount() > 0) {
            tblCurso.getColumnModel().getColumn(0).setPreferredWidth(2);
        }

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(238, 238, 238))
        );

        btnAtualizar.setText("Atualizar");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });

        btnExcluir.setText("Excluir");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });

        btnSalvar1.setText("Limpar");
        btnSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvar1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1)
                    .addComponent(txtCurso, javax.swing.GroupLayout.PREFERRED_SIZE, 264, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(cmbDuracao, javax.swing.GroupLayout.Alignment.LEADING, 0, 218, Short.MAX_VALUE)
                        .addComponent(cmbPeriodo, javax.swing.GroupLayout.Alignment.LEADING, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 48, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 418, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(24, 24, 24))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(34, 34, 34)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtCurso, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbPeriodo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbDuracao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 60, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnSalvar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnAtualizar, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnExcluir, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnSalvar1, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cmbPeriodoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbPeriodoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbPeriodoActionPerformed

    private void cmbDuracaoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbDuracaoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbDuracaoActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        if(tblCurso.getSelectedRow() >= 0){
            Object Codigo = tblCurso.getModel().getValueAt(tblCurso.getSelectedRow(), 0);
            Codigo.toString();
            String c = Codigo.toString();
            int cod = Integer.parseInt(c);
            CursoDAO cd = new CursoDAO();
            boolean excluiu = cd.excluirCurso(cod);
            
            if(excluiu){
                atualizarTabela();
                JOptionPane.showMessageDialog(null, "Curso apagado.", 
                        "Apagar Curso", JOptionPane.INFORMATION_MESSAGE);
                limparCampos();
            } else {
                JOptionPane.showMessageDialog(null, "Curso não foi apagado.", 
                        "Apagar Curso", JOptionPane.ERROR_MESSAGE);
            }
        } else {
            JOptionPane.showMessageDialog(null, "Selecione uma linha.", 
                        "Dados incompletos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvarActionPerformed
        if( txtCurso.getText() != null && txtCurso.getText().trim().length() > 0 &&
                cmbPeriodo.getSelectedItem()!= null && cmbPeriodo.getSelectedItem().toString().trim().length()>0 &&
                cmbDuracao.getSelectedItem()!= null && cmbDuracao.getSelectedItem().toString().trim().length()>0) {
                
                Curso c = new Curso();
                c.setNome(txtCurso.getText());
                c.setPeriodo(cmbPeriodo.getSelectedItem().toString());
                c.setDuracao(cmbDuracao.getSelectedItem().toString());
                
                
                CursoDAO pd = new CursoDAO();
                boolean salvou = pd.salvarCurso(c);
                
                salvar(salvou);
                
            } else {
                JOptionPane.showMessageDialog(null, "Todas as informações precisam ser preenchidas!","Dados incompletos", JOptionPane.ERROR_MESSAGE);
            }
    }//GEN-LAST:event_btnSalvarActionPerformed

    private void tblCursoMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblCursoMouseClicked
        if(tblCurso.getSelectedRow() >= 0){

            Object nome = tblCurso.getModel().getValueAt(tblCurso.getSelectedRow(), 1);
            String n = nome.toString();
            txtCurso.setText(n);
            
            Object periodo = tblCurso.getModel().getValueAt(tblCurso.getSelectedRow(), 2);
            String e = periodo.toString();
            cmbPeriodo.setSelectedItem(e);
            
            Object duracao = tblCurso.getModel().getValueAt(tblCurso.getSelectedRow(), 3);
            String d = duracao.toString();
            cmbDuracao.setSelectedItem(d);
            
        }
    }//GEN-LAST:event_tblCursoMouseClicked

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        if (txtCurso.getText() != null && txtCurso.getText().trim().length() > 0){
            
            Object Codigo = tblCurso.getModel().getValueAt(tblCurso.getSelectedRow(), 0);
            int cod = Integer.parseInt(Codigo.toString());
            
            Curso c = new Curso();
            c.setCursoID(cod);
            c.setNome(txtCurso.getText());
            c.setPeriodo(cmbPeriodo.getSelectedItem().toString());
            c.setDuracao(cmbDuracao.getSelectedItem().toString());
            
            
            CursoDAO cd = new CursoDAO();
            boolean atualizou = cd.atualizarCurso(c);
            salvar(atualizou);
            
        } else {
            JOptionPane.showMessageDialog(null, "Todas as informações precisam ser preenchidas!","Dados incompletos", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvar1ActionPerformed
        limparCampos();
    }//GEN-LAST:event_btnSalvar1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CadastroCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CadastroCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CadastroCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CadastroCurso.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CadastroCurso().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnSalvar;
    private javax.swing.JButton btnSalvar1;
    private javax.swing.JComboBox<String> cmbDuracao;
    private javax.swing.JComboBox<String> cmbPeriodo;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblCurso;
    private javax.swing.JTextField txtCurso;
    // End of variables declaration//GEN-END:variables
    public final void exibirInformacoes(){
        CursoDAO p = new CursoDAO();
        Connection conn = null;
         
         try {
            conn = p.abrirConexao();
           
            if(conn != null){
                String Consulta = "SELECT * FROM Curso ORDER BY NOME";
                Statement stm = conn.createStatement();
                ResultSet resultado = stm.executeQuery(Consulta);
                
                int cont = 0;
           
                while( resultado.next() ) {    
                cont++;
                
                String professorID = resultado.getString("CursoID"); 
                String nome = resultado.getString("Nome"); 
                String email = resultado.getString("Periodo"); 
                String telefone = resultado.getString("Duracao"); 
                
                DefaultTableModel modelo = (DefaultTableModel) tblCurso.getModel();
                String[] coluna = new String[] {
                resultado.getString("CursoID"), 
                resultado.getString("Nome"), 
                resultado.getString("Periodo"), 
                resultado.getString("Duracao") }; 
                modelo.addRow(coluna);
                }
                
            }
        } catch(SQLException ex){
            System.out.println("Erro ao consultar os dados do BD.");
        } finally {
            p.fecharConexao(conn);
        }
        
    }

    public void esconderInfomacoes(){
        DefaultTableModel modelo = (DefaultTableModel) tblCurso.getModel();
        modelo.setNumRows(0);
    }
    
    public void atualizarTabela(){
        esconderInfomacoes();
        exibirInformacoes();
    }
    
    public void limparCampos(){
        txtCurso.setText("");
        cmbDuracao.setSelectedIndex(0);
        cmbPeriodo.setSelectedIndex(0);
    }
    
    public void salvar(boolean s){
        if(s){
            limparCampos();
            atualizarTabela();
            JOptionPane.showMessageDialog(null, "Curso salvo com sucesso!","Cadastrar curso", JOptionPane.INFORMATION_MESSAGE);
        } else {
            JOptionPane.showMessageDialog(null, "Erro ao atualizar curso!","Atualizar Curso", JOptionPane.ERROR_MESSAGE);
        }
        
    }
}
